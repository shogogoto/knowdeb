/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import { faker } from "@faker-js/faker";

import { http, HttpResponse, delay } from "msw";

export const getCheckHealthHealthGetResponseMock = (): string =>
  faker.word.sample();

export const getCheckHealthHealthGetMockHandler = (
  overrideResponse?:
    | string
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<string> | string),
) => {
  return http.get("*/health", async (info) => {
    await delay(200);

    return new HttpResponse(
      JSON.stringify(
        overrideResponse !== undefined
          ? typeof overrideResponse === "function"
            ? await overrideResponse(info)
            : overrideResponse
          : getCheckHealthHealthGetResponseMock(),
      ),
      { status: 200, headers: { "Content-Type": "application/json" } },
    );
  });
};
export const getDefaultMock = () => [getCheckHealthHealthGetMockHandler()];
