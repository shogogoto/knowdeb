/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import { z as zod } from "zod";

/**
 * @summary Users:Current User
 */
export const usersCurrentUserUserMeGetResponseIsActiveDefault = true;
export const usersCurrentUserUserMeGetResponseIsSuperuserDefault = false;
export const usersCurrentUserUserMeGetResponseIsVerifiedDefault = false;
export const usersCurrentUserUserMeGetResponseDisplayNameMaxOne = 32;
export const usersCurrentUserUserMeGetResponseProfileMaxOne = 160;
export const usersCurrentUserUserMeGetResponseUsernameMaxOne = 16;
export const usersCurrentUserUserMeGetResponseUsernameRegExpOne = /^[^-]*$/;

export const usersCurrentUserUserMeGetResponse = zod
  .object({
    uid: zod.string().uuid(),
    email: zod.string().email(),
    is_active: zod
      .boolean()
      .default(usersCurrentUserUserMeGetResponseIsActiveDefault),
    is_superuser: zod.boolean().optional(),
    is_verified: zod.boolean().optional(),
    display_name: zod
      .string()
      .max(usersCurrentUserUserMeGetResponseDisplayNameMaxOne)
      .or(zod.null())
      .optional(),
    profile: zod
      .string()
      .max(usersCurrentUserUserMeGetResponseProfileMaxOne)
      .or(zod.null())
      .optional(),
    avatar_url: zod.string().or(zod.null()).optional(),
    username: zod
      .string()
      .max(usersCurrentUserUserMeGetResponseUsernameMaxOne)
      .regex(usersCurrentUserUserMeGetResponseUsernameRegExpOne)
      .or(zod.null())
      .optional(),
    created: zod.string().datetime({}),
  })
  .describe("Ë™≠„ÅøÂèñ„Çä.");

/**
 * @summary Users:Patch Current User
 */
export const usersPatchCurrentUserUserMePatchBodyDisplayNameMaxOne = 32;
export const usersPatchCurrentUserUserMePatchBodyProfileMaxOne = 160;
export const usersPatchCurrentUserUserMePatchBodyUsernameMaxOne = 16;
export const usersPatchCurrentUserUserMePatchBodyUsernameRegExpOne = /^[^-]*$/;

export const usersPatchCurrentUserUserMePatchBody = zod
  .object({
    password: zod.string().or(zod.null()).optional(),
    email: zod.string().email().or(zod.null()).optional(),
    is_active: zod.boolean().or(zod.null()).optional(),
    is_superuser: zod.boolean().or(zod.null()).optional(),
    is_verified: zod.boolean().or(zod.null()).optional(),
    display_name: zod
      .string()
      .max(usersPatchCurrentUserUserMePatchBodyDisplayNameMaxOne)
      .or(zod.null())
      .optional(),
    profile: zod
      .string()
      .max(usersPatchCurrentUserUserMePatchBodyProfileMaxOne)
      .or(zod.null())
      .optional(),
    avatar_url: zod.string().or(zod.null()).optional(),
    username: zod
      .string()
      .max(usersPatchCurrentUserUserMePatchBodyUsernameMaxOne)
      .regex(usersPatchCurrentUserUserMePatchBodyUsernameRegExpOne)
      .or(zod.null())
      .optional(),
  })
  .describe("Êõ¥Êñ∞.");

export const usersPatchCurrentUserUserMePatchResponseIsActiveDefault = true;
export const usersPatchCurrentUserUserMePatchResponseIsSuperuserDefault = false;
export const usersPatchCurrentUserUserMePatchResponseIsVerifiedDefault = false;
export const usersPatchCurrentUserUserMePatchResponseDisplayNameMaxOne = 32;
export const usersPatchCurrentUserUserMePatchResponseProfileMaxOne = 160;
export const usersPatchCurrentUserUserMePatchResponseUsernameMaxOne = 16;
export const usersPatchCurrentUserUserMePatchResponseUsernameRegExpOne =
  /^[^-]*$/;

export const usersPatchCurrentUserUserMePatchResponse = zod
  .object({
    uid: zod.string().uuid(),
    email: zod.string().email(),
    is_active: zod
      .boolean()
      .default(usersPatchCurrentUserUserMePatchResponseIsActiveDefault),
    is_superuser: zod.boolean().optional(),
    is_verified: zod.boolean().optional(),
    display_name: zod
      .string()
      .max(usersPatchCurrentUserUserMePatchResponseDisplayNameMaxOne)
      .or(zod.null())
      .optional(),
    profile: zod
      .string()
      .max(usersPatchCurrentUserUserMePatchResponseProfileMaxOne)
      .or(zod.null())
      .optional(),
    avatar_url: zod.string().or(zod.null()).optional(),
    username: zod
      .string()
      .max(usersPatchCurrentUserUserMePatchResponseUsernameMaxOne)
      .regex(usersPatchCurrentUserUserMePatchResponseUsernameRegExpOne)
      .or(zod.null())
      .optional(),
    created: zod.string().datetime({}),
  })
  .describe("Ë™≠„ÅøÂèñ„Çä.");

/**
 * @summary Users:User
 */
export const usersUserUserIdGetParams = zod.object({
  id: zod.string(),
});

export const usersUserUserIdGetResponseIsActiveDefault = true;
export const usersUserUserIdGetResponseIsSuperuserDefault = false;
export const usersUserUserIdGetResponseIsVerifiedDefault = false;
export const usersUserUserIdGetResponseDisplayNameMaxOne = 32;
export const usersUserUserIdGetResponseProfileMaxOne = 160;
export const usersUserUserIdGetResponseUsernameMaxOne = 16;
export const usersUserUserIdGetResponseUsernameRegExpOne = /^[^-]*$/;

export const usersUserUserIdGetResponse = zod
  .object({
    uid: zod.string().uuid(),
    email: zod.string().email(),
    is_active: zod.boolean().default(usersUserUserIdGetResponseIsActiveDefault),
    is_superuser: zod.boolean().optional(),
    is_verified: zod.boolean().optional(),
    display_name: zod
      .string()
      .max(usersUserUserIdGetResponseDisplayNameMaxOne)
      .or(zod.null())
      .optional(),
    profile: zod
      .string()
      .max(usersUserUserIdGetResponseProfileMaxOne)
      .or(zod.null())
      .optional(),
    avatar_url: zod.string().or(zod.null()).optional(),
    username: zod
      .string()
      .max(usersUserUserIdGetResponseUsernameMaxOne)
      .regex(usersUserUserIdGetResponseUsernameRegExpOne)
      .or(zod.null())
      .optional(),
    created: zod.string().datetime({}),
  })
  .describe("Ë™≠„ÅøÂèñ„Çä.");

/**
 * @summary Users:Patch User
 */
export const usersPatchUserUserIdPatchParams = zod.object({
  id: zod.string(),
});

export const usersPatchUserUserIdPatchBodyDisplayNameMaxOne = 32;
export const usersPatchUserUserIdPatchBodyProfileMaxOne = 160;
export const usersPatchUserUserIdPatchBodyUsernameMaxOne = 16;
export const usersPatchUserUserIdPatchBodyUsernameRegExpOne = /^[^-]*$/;

export const usersPatchUserUserIdPatchBody = zod
  .object({
    password: zod.string().or(zod.null()).optional(),
    email: zod.string().email().or(zod.null()).optional(),
    is_active: zod.boolean().or(zod.null()).optional(),
    is_superuser: zod.boolean().or(zod.null()).optional(),
    is_verified: zod.boolean().or(zod.null()).optional(),
    display_name: zod
      .string()
      .max(usersPatchUserUserIdPatchBodyDisplayNameMaxOne)
      .or(zod.null())
      .optional(),
    profile: zod
      .string()
      .max(usersPatchUserUserIdPatchBodyProfileMaxOne)
      .or(zod.null())
      .optional(),
    avatar_url: zod.string().or(zod.null()).optional(),
    username: zod
      .string()
      .max(usersPatchUserUserIdPatchBodyUsernameMaxOne)
      .regex(usersPatchUserUserIdPatchBodyUsernameRegExpOne)
      .or(zod.null())
      .optional(),
  })
  .describe("Êõ¥Êñ∞.");

export const usersPatchUserUserIdPatchResponseIsActiveDefault = true;
export const usersPatchUserUserIdPatchResponseIsSuperuserDefault = false;
export const usersPatchUserUserIdPatchResponseIsVerifiedDefault = false;
export const usersPatchUserUserIdPatchResponseDisplayNameMaxOne = 32;
export const usersPatchUserUserIdPatchResponseProfileMaxOne = 160;
export const usersPatchUserUserIdPatchResponseUsernameMaxOne = 16;
export const usersPatchUserUserIdPatchResponseUsernameRegExpOne = /^[^-]*$/;

export const usersPatchUserUserIdPatchResponse = zod
  .object({
    uid: zod.string().uuid(),
    email: zod.string().email(),
    is_active: zod
      .boolean()
      .default(usersPatchUserUserIdPatchResponseIsActiveDefault),
    is_superuser: zod.boolean().optional(),
    is_verified: zod.boolean().optional(),
    display_name: zod
      .string()
      .max(usersPatchUserUserIdPatchResponseDisplayNameMaxOne)
      .or(zod.null())
      .optional(),
    profile: zod
      .string()
      .max(usersPatchUserUserIdPatchResponseProfileMaxOne)
      .or(zod.null())
      .optional(),
    avatar_url: zod.string().or(zod.null()).optional(),
    username: zod
      .string()
      .max(usersPatchUserUserIdPatchResponseUsernameMaxOne)
      .regex(usersPatchUserUserIdPatchResponseUsernameRegExpOne)
      .or(zod.null())
      .optional(),
    created: zod.string().datetime({}),
  })
  .describe("Ë™≠„ÅøÂèñ„Çä.");

/**
 * @summary Users:Delete User
 */
export const usersDeleteUserUserIdDeleteParams = zod.object({
  id: zod.string(),
});
