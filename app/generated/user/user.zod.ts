/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import { z as zod } from "zod";

/**
 * Ë™çË®º„Å™„Åó„É¶„Éº„Ç∂„ÉºÊ§úÁ¥¢.
 * @summary Search User
 */
export const searchUserUserSearchGetQueryNameDefault = "";
export const searchUserUserSearchGetQueryIdDefault = "";

export const searchUserUserSearchGetQueryParams = zod.object({
  name: zod.string().or(zod.null()).optional(),
  id: zod.string().or(zod.null()).optional(),
});

export const searchUserUserSearchGetResponseIdRegExpOne = /^[^-]*$/;
export const searchUserUserSearchGetResponseIsActiveDefault = true;
export const searchUserUserSearchGetResponseIsSuperuserDefault = false;
export const searchUserUserSearchGetResponseIsVerifiedDefault = false;
export const searchUserUserSearchGetResponseDisplayNameMaxOne = 32;
export const searchUserUserSearchGetResponseProfileMaxOne = 160;

export const searchUserUserSearchGetResponseItem = zod
  .object({
    id: zod
      .string()
      .regex(searchUserUserSearchGetResponseIdRegExpOne)
      .or(zod.null())
      .optional(),
    email: zod.string().email(),
    is_active: zod
      .boolean()
      .default(searchUserUserSearchGetResponseIsActiveDefault),
    is_superuser: zod.boolean().optional(),
    is_verified: zod.boolean().optional(),
    display_name: zod
      .string()
      .max(searchUserUserSearchGetResponseDisplayNameMaxOne)
      .or(zod.null())
      .optional(),
    profile: zod
      .string()
      .max(searchUserUserSearchGetResponseProfileMaxOne)
      .or(zod.null())
      .optional(),
    avatar_url: zod.string().or(zod.null()).optional(),
    created: zod.string().datetime({}),
  })
  .describe("Ë™≠„ÅøÂèñ„Çä.");
export const searchUserUserSearchGetResponse = zod.array(
  searchUserUserSearchGetResponseItem,
);

/**
 * @summary Users:Current User
 */
export const usersCurrentUserUserMeGetResponseIdRegExpOne = /^[^-]*$/;
export const usersCurrentUserUserMeGetResponseIsActiveDefault = true;
export const usersCurrentUserUserMeGetResponseIsSuperuserDefault = false;
export const usersCurrentUserUserMeGetResponseIsVerifiedDefault = false;
export const usersCurrentUserUserMeGetResponseDisplayNameMaxOne = 32;
export const usersCurrentUserUserMeGetResponseProfileMaxOne = 160;

export const usersCurrentUserUserMeGetResponse = zod
  .object({
    id: zod
      .string()
      .regex(usersCurrentUserUserMeGetResponseIdRegExpOne)
      .or(zod.null())
      .optional(),
    email: zod.string().email(),
    is_active: zod
      .boolean()
      .default(usersCurrentUserUserMeGetResponseIsActiveDefault),
    is_superuser: zod.boolean().optional(),
    is_verified: zod.boolean().optional(),
    display_name: zod
      .string()
      .max(usersCurrentUserUserMeGetResponseDisplayNameMaxOne)
      .or(zod.null())
      .optional(),
    profile: zod
      .string()
      .max(usersCurrentUserUserMeGetResponseProfileMaxOne)
      .or(zod.null())
      .optional(),
    avatar_url: zod.string().or(zod.null()).optional(),
    created: zod.string().datetime({}),
  })
  .describe("Ë™≠„ÅøÂèñ„Çä.");

/**
 * @summary Users:Patch Current User
 */
export const usersPatchCurrentUserUserMePatchBodyDisplayNameMaxOne = 32;
export const usersPatchCurrentUserUserMePatchBodyProfileMaxOne = 160;
export const usersPatchCurrentUserUserMePatchBodyIdRegExpOne = /^[^-]*$/;

export const usersPatchCurrentUserUserMePatchBody = zod
  .object({
    password: zod.string().or(zod.null()).optional(),
    email: zod.string().email().or(zod.null()).optional(),
    is_active: zod.boolean().or(zod.null()).optional(),
    is_superuser: zod.boolean().or(zod.null()).optional(),
    is_verified: zod.boolean().or(zod.null()).optional(),
    display_name: zod
      .string()
      .max(usersPatchCurrentUserUserMePatchBodyDisplayNameMaxOne)
      .or(zod.null())
      .optional(),
    profile: zod
      .string()
      .max(usersPatchCurrentUserUserMePatchBodyProfileMaxOne)
      .or(zod.null())
      .optional(),
    avatar_url: zod.string().or(zod.null()).optional(),
    id: zod
      .string()
      .regex(usersPatchCurrentUserUserMePatchBodyIdRegExpOne)
      .or(zod.null())
      .optional(),
  })
  .describe("Êõ¥Êñ∞.");

export const usersPatchCurrentUserUserMePatchResponseIdRegExpOne = /^[^-]*$/;
export const usersPatchCurrentUserUserMePatchResponseIsActiveDefault = true;
export const usersPatchCurrentUserUserMePatchResponseIsSuperuserDefault = false;
export const usersPatchCurrentUserUserMePatchResponseIsVerifiedDefault = false;
export const usersPatchCurrentUserUserMePatchResponseDisplayNameMaxOne = 32;
export const usersPatchCurrentUserUserMePatchResponseProfileMaxOne = 160;

export const usersPatchCurrentUserUserMePatchResponse = zod
  .object({
    id: zod
      .string()
      .regex(usersPatchCurrentUserUserMePatchResponseIdRegExpOne)
      .or(zod.null())
      .optional(),
    email: zod.string().email(),
    is_active: zod
      .boolean()
      .default(usersPatchCurrentUserUserMePatchResponseIsActiveDefault),
    is_superuser: zod.boolean().optional(),
    is_verified: zod.boolean().optional(),
    display_name: zod
      .string()
      .max(usersPatchCurrentUserUserMePatchResponseDisplayNameMaxOne)
      .or(zod.null())
      .optional(),
    profile: zod
      .string()
      .max(usersPatchCurrentUserUserMePatchResponseProfileMaxOne)
      .or(zod.null())
      .optional(),
    avatar_url: zod.string().or(zod.null()).optional(),
    created: zod.string().datetime({}),
  })
  .describe("Ë™≠„ÅøÂèñ„Çä.");

/**
 * @summary Users:User
 */
export const usersUserUserIdGetParams = zod.object({
  id: zod.string(),
});

export const usersUserUserIdGetResponseIdRegExpOne = /^[^-]*$/;
export const usersUserUserIdGetResponseIsActiveDefault = true;
export const usersUserUserIdGetResponseIsSuperuserDefault = false;
export const usersUserUserIdGetResponseIsVerifiedDefault = false;
export const usersUserUserIdGetResponseDisplayNameMaxOne = 32;
export const usersUserUserIdGetResponseProfileMaxOne = 160;

export const usersUserUserIdGetResponse = zod
  .object({
    id: zod
      .string()
      .regex(usersUserUserIdGetResponseIdRegExpOne)
      .or(zod.null())
      .optional(),
    email: zod.string().email(),
    is_active: zod.boolean().default(usersUserUserIdGetResponseIsActiveDefault),
    is_superuser: zod.boolean().optional(),
    is_verified: zod.boolean().optional(),
    display_name: zod
      .string()
      .max(usersUserUserIdGetResponseDisplayNameMaxOne)
      .or(zod.null())
      .optional(),
    profile: zod
      .string()
      .max(usersUserUserIdGetResponseProfileMaxOne)
      .or(zod.null())
      .optional(),
    avatar_url: zod.string().or(zod.null()).optional(),
    created: zod.string().datetime({}),
  })
  .describe("Ë™≠„ÅøÂèñ„Çä.");

/**
 * @summary Users:Patch User
 */
export const usersPatchUserUserIdPatchParams = zod.object({
  id: zod.string(),
});

export const usersPatchUserUserIdPatchBodyDisplayNameMaxOne = 32;
export const usersPatchUserUserIdPatchBodyProfileMaxOne = 160;
export const usersPatchUserUserIdPatchBodyIdRegExpOne = /^[^-]*$/;

export const usersPatchUserUserIdPatchBody = zod
  .object({
    password: zod.string().or(zod.null()).optional(),
    email: zod.string().email().or(zod.null()).optional(),
    is_active: zod.boolean().or(zod.null()).optional(),
    is_superuser: zod.boolean().or(zod.null()).optional(),
    is_verified: zod.boolean().or(zod.null()).optional(),
    display_name: zod
      .string()
      .max(usersPatchUserUserIdPatchBodyDisplayNameMaxOne)
      .or(zod.null())
      .optional(),
    profile: zod
      .string()
      .max(usersPatchUserUserIdPatchBodyProfileMaxOne)
      .or(zod.null())
      .optional(),
    avatar_url: zod.string().or(zod.null()).optional(),
    id: zod
      .string()
      .regex(usersPatchUserUserIdPatchBodyIdRegExpOne)
      .or(zod.null())
      .optional(),
  })
  .describe("Êõ¥Êñ∞.");

export const usersPatchUserUserIdPatchResponseIdRegExpOne = /^[^-]*$/;
export const usersPatchUserUserIdPatchResponseIsActiveDefault = true;
export const usersPatchUserUserIdPatchResponseIsSuperuserDefault = false;
export const usersPatchUserUserIdPatchResponseIsVerifiedDefault = false;
export const usersPatchUserUserIdPatchResponseDisplayNameMaxOne = 32;
export const usersPatchUserUserIdPatchResponseProfileMaxOne = 160;

export const usersPatchUserUserIdPatchResponse = zod
  .object({
    id: zod
      .string()
      .regex(usersPatchUserUserIdPatchResponseIdRegExpOne)
      .or(zod.null())
      .optional(),
    email: zod.string().email(),
    is_active: zod
      .boolean()
      .default(usersPatchUserUserIdPatchResponseIsActiveDefault),
    is_superuser: zod.boolean().optional(),
    is_verified: zod.boolean().optional(),
    display_name: zod
      .string()
      .max(usersPatchUserUserIdPatchResponseDisplayNameMaxOne)
      .or(zod.null())
      .optional(),
    profile: zod
      .string()
      .max(usersPatchUserUserIdPatchResponseProfileMaxOne)
      .or(zod.null())
      .optional(),
    avatar_url: zod.string().or(zod.null()).optional(),
    created: zod.string().datetime({}),
  })
  .describe("Ë™≠„ÅøÂèñ„Çä.");

/**
 * @summary Users:Delete User
 */
export const usersDeleteUserUserIdDeleteParams = zod.object({
  id: zod.string(),
});
