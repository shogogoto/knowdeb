/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import { z as zod } from "zod";

/**
 * @summary Oauth:Google.Jwt.Authorize
 */
export const oauthGoogleJwtAuthorizeGoogleAuthorizeGetQueryParams = zod.object({
  scopes: zod.array(zod.string()).optional(),
});

export const oauthGoogleJwtAuthorizeGoogleAuthorizeGetResponse = zod.object({
  authorization_url: zod.string(),
});

/**
 * The response varies based on the authentication backend used.
 * @summary Oauth:Google.Jwt.Callback
 */
export const oauthGoogleJwtCallbackGoogleCallbackGetQueryParams = zod.object({
  code: zod.string().or(zod.null()).optional(),
  code_verifier: zod.string().or(zod.null()).optional(),
  state: zod.string().or(zod.null()).optional(),
  error: zod.string().or(zod.null()).optional(),
});

export const oauthGoogleJwtCallbackGoogleCallbackGetResponse = zod.any();

/**
 * @summary Oauth:Google.Cookie.Authorize
 */
export const oauthGoogleCookieAuthorizeGoogleCookieAuthorizeGetQueryParams =
  zod.object({
    scopes: zod.array(zod.string()).optional(),
  });

export const oauthGoogleCookieAuthorizeGoogleCookieAuthorizeGetResponse =
  zod.object({
    authorization_url: zod.string(),
  });

/**
 * The response varies based on the authentication backend used.
 * @summary Oauth:Google.Cookie.Callback
 */
export const oauthGoogleCookieCallbackGoogleCookieCallbackGetQueryParams =
  zod.object({
    code: zod.string().or(zod.null()).optional(),
    code_verifier: zod.string().or(zod.null()).optional(),
    state: zod.string().or(zod.null()).optional(),
    error: zod.string().or(zod.null()).optional(),
  });

export const oauthGoogleCookieCallbackGoogleCookieCallbackGetResponse =
  zod.any();
