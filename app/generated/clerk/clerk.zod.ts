/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import { z as zod } from "zod";

/**
 * Clerk„Åß„ÅÆUser CRUD„Ååwebhook„Åß„Åì„ÅÆAPI„Å´ÈÄ£Êê∫„Åï„Çå„Çã.
 * @summary Clerk Webhook
 */
export const clerkWebhookWebhookClerkPostBody = zod
  .object({
    data: zod.record(zod.string(), zod.any()),
    type: zod
      .enum(["user.created", "user.updated", "user.deleted", "email.created"])
      .describe("Webhook sent event."),
  })
  .describe("webhook request json.");

export const clerkWebhookWebhookClerkPostResponseIsSuperuserDefault = false;
export const clerkWebhookWebhookClerkPostResponseIsVerifiedDefault = false;

export const clerkWebhookWebhookClerkPostResponse = zod
  .object({
    uid: zod.string().uuid().or(zod.null()).optional(),
    email: zod.string().email(),
    hashed_password: zod.string(),
    is_active: zod.boolean(),
    is_superuser: zod.boolean().optional(),
    is_verified: zod.boolean().optional(),
    oauth_accounts: zod
      .array(
        zod
          .object({
            oauth_name: zod.string(),
            access_token: zod.string(),
            expires_at: zod.number().or(zod.null()).optional(),
            refresh_token: zod.string().or(zod.null()).optional(),
            account_id: zod.string(),
            account_email: zod.string().email(),
          })
          .describe("OAuthAccountProtocol[UUID]„ÇíÊ∫Ä„Åü„Åô."),
      )
      .optional(),
    clerk_id: zod.string().or(zod.null()).optional(),
    display_name: zod.string().or(zod.null()).optional(),
  })
  .describe("UserProtocol[UUID]„ÇíÊ∫Ä„Åü„Åô.")
  .or(zod.null());
