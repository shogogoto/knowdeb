/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
export type BaseOAuthAccountExpiresAt = number | null;

export type BaseOAuthAccountRefreshToken = string | null;

/**
 * Base OAuth account model.
 */
export interface BaseOAuthAccount {
  id: unknown;
  oauth_name: string;
  access_token: string;
  expires_at?: BaseOAuthAccountExpiresAt;
  refresh_token?: BaseOAuthAccountRefreshToken;
  account_id: string;
  account_email: string;
}

export interface BearerResponse {
  access_token: string;
  token_type: string;
}

export type BodyAuthCookieLoginAuthCookieLoginPostGrantType = string | null;

export type BodyAuthCookieLoginAuthCookieLoginPostClientId = string | null;

export type BodyAuthCookieLoginAuthCookieLoginPostClientSecret = string | null;

export interface BodyAuthCookieLoginAuthCookieLoginPost {
  grant_type?: BodyAuthCookieLoginAuthCookieLoginPostGrantType;
  username: string;
  password: string;
  scope?: string;
  client_id?: BodyAuthCookieLoginAuthCookieLoginPostClientId;
  client_secret?: BodyAuthCookieLoginAuthCookieLoginPostClientSecret;
}

export type BodyAuthJwtLoginAuthJwtLoginPostGrantType = string | null;

export type BodyAuthJwtLoginAuthJwtLoginPostClientId = string | null;

export type BodyAuthJwtLoginAuthJwtLoginPostClientSecret = string | null;

export interface BodyAuthJwtLoginAuthJwtLoginPost {
  grant_type?: BodyAuthJwtLoginAuthJwtLoginPostGrantType;
  username: string;
  password: string;
  scope?: string;
  client_id?: BodyAuthJwtLoginAuthJwtLoginPostClientId;
  client_secret?: BodyAuthJwtLoginAuthJwtLoginPostClientSecret;
}

export interface BodyReadFileUploadPost {
  files: Blob[];
}

export interface BodyResetForgotPasswordAuthForgotPasswordPost {
  email: string;
}

export interface BodyResetResetPasswordAuthResetPasswordPost {
  token: string;
  password: string;
}

export interface BodyVerifyRequestTokenAuthRequestVerifyTokenPost {
  email: string;
}

export interface BodyVerifyVerifyAuthVerifyPost {
  token: string;
}

/**
 * for fastapi schema.
 */
export interface EdgeData {
  source: string;
  target: string;
}

export type EntryElementIdProperty = string | null;

/**
 * namespaceÁî®„ÅÆhashable„Å™Ë°®Áèæ.
 */
export interface Entry {
  name: string;
  element_id_property?: EntryElementIdProperty;
  uid: string;
}

export type ErrorModelDetailAnyOf = { [key: string]: string };

export type ErrorModelDetail = string | ErrorModelDetailAnyOf;

export interface ErrorModel {
  detail: ErrorModelDetail;
}

export type GraphDataGraph = { [key: string]: unknown };

export type GraphDataNodesItem = { [key: string]: string };

/**
 * for fastapi schema.
 */
export interface GraphData {
  directed: boolean;
  edges: EdgeData[];
  graph: GraphDataGraph;
  multigraph: boolean;
  nodes: GraphDataNodesItem[];
}

export interface HTTPValidationError {
  detail?: ValidationError[];
}

export type KStatsScore = number | null;

/**
 * Áü•Ë≠ò„ÅÆÈñ¢‰øÇÁµ±Ë®à.
 */
export interface KStats {
  /**
   * @minimum -100
   * @maximum 1000
   */
  n_detail: number;
  /**
   * @minimum -100
   * @maximum 1000
   */
  n_premise: number;
  /**
   * @minimum -100
   * @maximum 1000
   */
  n_conclusion: number;
  /**
   * @minimum -100
   * @maximum 1000
   */
  n_refer: number;
  /**
   * @minimum -100
   * @maximum 1000
   */
  n_referred: number;
  /**
   * @minimum -100
   * @maximum 1000
   */
  dist_axiom: number;
  /**
   * @minimum -100
   * @maximum 1000
   */
  dist_leaf: number;
  score?: KStatsScore;
}

export type KnowdeTerm = Term | null;

export type KnowdeWhen = string | null;

export type KnowdeWhere = string | null;

export type KnowdeBy = string | null;

/**
 * Áü•Ë≠ò„ÅÆÊúÄÂ∞èÂçò‰Ωç.
 */
export interface Knowde {
  sentence: string;
  uid: string;
  term?: KnowdeTerm;
  when?: KnowdeWhen;
  where?: KnowdeWhere;
  by?: KnowdeBy;
}

export type KnowdeDetailKnowdes = { [key: string]: KnowdeWithStats };

/**
 * Ë©≥Á¥∞.
 */
export interface KnowdeDetail {
  uid: string;
  g: GraphData;
  knowdes: KnowdeDetailKnowdes;
  location: KnowdeLocation;
}

/**
 * knowde„ÅÆ‰ΩçÁΩÆÊÉÖÂ†±.
 */
export interface KnowdeLocation {
  user: User;
  folders: UidStr[];
  resource: MResource;
  headers: UidStr[];
  parents: KnowdeWithStats[];
}

/**
 * knowdeÊ§úÁ¥¢ÁµêÊûú.
 */
export interface KnowdeSearchResult {
  total: number;
  data: KnowdeWithStats[];
}

/**
 * Áµ±Ë®àÊÉÖÂ†±‰ªò„Åçknowde.
 */
export interface KnowdeWithStats {
  knowde: Knowde;
  stats: KStats;
}

export type MResourceElementIdProperty = string | null;

export type MResourceAuthors = string[] | null;

export type MResourcePublished = string | null;

export type MResourceUrls = string[] | null;

export type MResourcePath = string[] | null;

export type MResourceUpdated = string | null;

export type MResourceTxtHash = number | null;

/**
 * LResource„ÅÆOGM, „É™„ÇΩ„Éº„Çπ„ÅÆ„É°„ÇøÊÉÖÂ†±.
 */
export interface MResource {
  name: string;
  element_id_property?: MResourceElementIdProperty;
  uid: string;
  authors?: MResourceAuthors;
  published?: MResourcePublished;
  urls?: MResourceUrls;
  path?: MResourcePath;
  updated?: MResourceUpdated;
  txt_hash?: MResourceTxtHash;
}

export type NameSpaceRoots = { [key: string]: Entry };

/**
 * „É™„ÇΩ„Éº„Çπ„ÅÆÂàÜÈ°û.
 */
export interface NameSpace {
  g?: GraphData;
  roots_: NameSpaceRoots;
  user_id: string;
}

export interface OAuth2AuthorizeResponse {
  authorization_url: string;
}

export type ResourceMetaPublished = string | null;

export type ResourceMetaPath = string[] | null;

export type ResourceMetaUpdated = string | null;

export type ResourceMetaTxtHash = number | null;

/**
 * „É™„ÇΩ„Éº„Çπ„É°„ÇøÊÉÖÂ†±.
 */
export interface ResourceMeta {
  title: string;
  authors?: string[];
  published?: ResourceMetaPublished;
  urls?: string[];
  path?: ResourceMetaPath;
  updated?: ResourceMetaUpdated;
  txt_hash?: ResourceMetaTxtHash;
}

/**
 * „É™„ÇØ„Ç®„Çπ„ÉàÁî®.
 */
export type ResourceMetas = ResourceMeta[];

/**
 * ÂèÇÁÖßÁî®„ÅÆÁÑ°ÊÑèÂë≥„Å™Ë®òÂè∑(ÂèÇÁÖß„ÇíÊåÅ„Åü„Å™„ÅÑ)
 */
export type TermAlias = string | null;

/**
 * Áî®Ë™û.
 */
export interface Term {
  names?: string[];
  /** ÂèÇÁÖßÁî®„ÅÆÁÑ°ÊÑèÂë≥„Å™Ë®òÂè∑(ÂèÇÁÖß„ÇíÊåÅ„Åü„Å™„ÅÑ) */
  alias?: TermAlias;
}

export type TrackUser = User | null;

/**
 * UUID‰ªò„ÅçÊñáÁ´†.
 */
export interface UidStr {
  val: string;
  uid: string;
}

export type UserDisplayName = string | null;

export type UserProfile = string | null;

export type UserAvatarUrl = string | null;

export type UserUsername = string | null;

export type UserUid = string | null;

/**
 * UserProtocol[UUID]„ÇíÊ∫Ä„Åü„Åô.
 */
export interface User {
  oauth_accounts?: BaseOAuthAccount[];
  display_name?: UserDisplayName;
  profile?: UserProfile;
  avatar_url?: UserAvatarUrl;
  username?: UserUsername;
  uid?: UserUid;
  email: string;
  hashed_password: string;
  is_active: boolean;
  is_superuser: boolean;
  is_verified: boolean;
  created: string;
}

export type UserCreateIsActive = boolean | null;

export type UserCreateIsSuperuser = boolean | null;

export type UserCreateIsVerified = boolean | null;

/**
 * ‰ΩúÊàê.
 */
export interface UserCreate {
  email: string;
  password: string;
  is_active?: UserCreateIsActive;
  is_superuser?: UserCreateIsSuperuser;
  is_verified?: UserCreateIsVerified;
}

export type UserReadDisplayName = string | null;

export type UserReadProfile = string | null;

export type UserReadAvatarUrl = string | null;

export type UserReadUsername = string | null;

/**
 * Ë™≠„ÅøÂèñ„Çä.
 */
export interface UserRead {
  id: string;
  email: string;
  is_active?: boolean;
  is_superuser?: boolean;
  is_verified?: boolean;
  display_name?: UserReadDisplayName;
  profile?: UserReadProfile;
  avatar_url?: UserReadAvatarUrl;
  username?: UserReadUsername;
  created: string;
}

export type UserReadPublicDisplayName = string | null;

export type UserReadPublicProfile = string | null;

export type UserReadPublicAvatarUrl = string | null;

export type UserReadPublicUsername = string | null;

/**
 * ÂÖ¨Èñã„É¶„Éº„Ç∂„ÉºÊÉÖÂ†±.
 */
export interface UserReadPublic {
  display_name?: UserReadPublicDisplayName;
  profile?: UserReadPublicProfile;
  avatar_url?: UserReadPublicAvatarUrl;
  username?: UserReadPublicUsername;
  created: string;
}

export type UserUpdatePassword = string | null;

export type UserUpdateEmail = string | null;

export type UserUpdateIsActive = boolean | null;

export type UserUpdateIsSuperuser = boolean | null;

export type UserUpdateIsVerified = boolean | null;

export type UserUpdateDisplayName = string | null;

export type UserUpdateProfile = string | null;

export type UserUpdateAvatarUrl = string | null;

export type UserUpdateUsername = string | null;

/**
 * Êõ¥Êñ∞.
 */
export interface UserUpdate {
  password?: UserUpdatePassword;
  email?: UserUpdateEmail;
  is_active?: UserUpdateIsActive;
  is_superuser?: UserUpdateIsSuperuser;
  is_verified?: UserUpdateIsVerified;
  display_name?: UserUpdateDisplayName;
  profile?: UserUpdateProfile;
  avatar_url?: UserUpdateAvatarUrl;
  username?: UserUpdateUsername;
}

export type ValidationErrorLocItem = string | number;

export interface ValidationError {
  loc: ValidationErrorLocItem[];
  msg: string;
  type: string;
}

export type OauthGoogleJwtAuthorizeGoogleAuthorizeGetParams = {
  scopes?: string[];
};

export type OauthGoogleJwtCallbackGoogleCallbackGetParams = {
  code?: string | null;
  code_verifier?: string | null;
  state?: string | null;
  error?: string | null;
};

export type OauthGoogleCookieAuthorizeGoogleCookieAuthorizeGetParams = {
  scopes?: string[];
};

export type OauthGoogleCookieCallbackGoogleCookieCallbackGetParams = {
  code?: string | null;
  code_verifier?: string | null;
  state?: string | null;
  error?: string | null;
};

export type SearchUserUserSearchGetParams = {
  display_name?: string;
  id?: string;
  user?: TrackUser;
};

export type UserProfileUserProfileUsernameGetParams = {
  user?: TrackUser;
};

export type SearchByTextKnowdeGetParams = {
  user?: TrackUser;
  q?: string;
  type?: SearchByTextKnowdeGetType;
  page?: number;
  size?: number;
  n_detail?: number;
  n_premise?: number;
  n_conclusion?: number;
  n_refer?: number;
  n_referred?: number;
  dist_axiom?: number;
  dist_leaf?: number;
  desc?: boolean;
};

export type SearchByTextKnowdeGetType =
  (typeof SearchByTextKnowdeGetType)[keyof typeof SearchByTextKnowdeGetType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SearchByTextKnowdeGetType = {
  CONTAINS: "CONTAINS",
  STARTS_WITH: "STARTS_WITH",
  ENDS_WITH: "ENDS_WITH",
  REGEX: "REGEX",
  EQUAL: "EQUAL",
} as const;

export type DetailKnowdeSentenceSentenceIdGetParams = {
  user?: TrackUser;
};
