/**
 * Generated by orval v7.8.0 🍺
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
export interface BearerResponse {
  access_token: string;
  token_type: string;
}

export type BodyAuthJwtLoginAuthJwtLoginPostGrantType = string | null;

export type BodyAuthJwtLoginAuthJwtLoginPostClientId = string | null;

export type BodyAuthJwtLoginAuthJwtLoginPostClientSecret = string | null;

export interface BodyAuthJwtLoginAuthJwtLoginPost {
  grant_type?: BodyAuthJwtLoginAuthJwtLoginPostGrantType;
  username: string;
  password: string;
  scope?: string;
  client_id?: BodyAuthJwtLoginAuthJwtLoginPostClientId;
  client_secret?: BodyAuthJwtLoginAuthJwtLoginPostClientSecret;
}

export interface BodyReadFileUploadPost {
  files: Blob[];
}

export interface BodyResetForgotPasswordAuthForgotPasswordPost {
  email: string;
}

export interface BodyResetResetPasswordAuthResetPasswordPost {
  token: string;
  password: string;
}

export interface BodyVerifyRequestTokenAuthRequestVerifyTokenPost {
  email: string;
}

export interface BodyVerifyVerifyAuthVerifyPost {
  token: string;
}

/**
 * for fastapi schema.
 */
export interface EdgeData {
  source: string;
  target: string;
}

export type EntryElementIdProperty = string | null;

/**
 * namespace用のhashableな表現.
 */
export interface Entry {
  name: string;
  element_id_property?: EntryElementIdProperty;
  uid: string;
}

export type ErrorModelDetailAnyOf = { [key: string]: string };

export type ErrorModelDetail = string | ErrorModelDetailAnyOf;

export interface ErrorModel {
  detail: ErrorModelDetail;
}

export type GraphDataGraph = { [key: string]: unknown };

export type GraphDataNodesItem = { [key: string]: string };

/**
 * for fastapi schema.
 */
export interface GraphData {
  directed: boolean;
  edges: EdgeData[];
  graph: GraphDataGraph;
  multigraph: boolean;
  nodes: GraphDataNodesItem[];
}

export interface HTTPValidationError {
  detail?: ValidationError[];
}

export type KAdjacencyWhen = string | null;

export type KAdjacencyStats = KStats | null;

/**
 * 周辺情報も含める.
 */
export interface KAdjacency {
  center: Knowde;
  when?: KAdjacencyWhen;
  details?: Knowde[];
  premises?: Knowde[];
  conclusions?: Knowde[];
  refers?: Knowde[];
  referreds?: Knowde[];
  stats?: KAdjacencyStats;
}

export type KStatsScore = number | null;

/**
 * 知識の関係統計.
 */
export interface KStats {
  n_detail: number;
  n_premise: number;
  n_conclusion: number;
  n_refer: number;
  n_referred: number;
  dist_axiom: number;
  dist_leaf: number;
  score?: KStatsScore;
}

export type KnowdeTerm = Term | null;

/**
 * 知識の最小単位.
 */
export interface Knowde {
  sentence: string;
  uid: string;
  term?: KnowdeTerm;
}

export type NameSpaceRoots = { [key: string]: Entry };

/**
 * リソースの分類.
 */
export interface NameSpace {
  g?: GraphData;
  roots_: NameSpaceRoots;
  user_id: string;
}

export interface OAuth2AuthorizeResponse {
  authorization_url: string;
}

/**
 * ORDER BY句.

weightと項目の合計値(score)でソートできる
他のスコア算出方法についてはペンディング
 */
export interface OrderBy {
  n_detail?: number;
  n_premise?: number;
  n_conclusion?: number;
  n_refer?: number;
  n_referred?: number;
  dist_axiom?: number;
  dist_leaf?: number;
  desc?: boolean;
}

/**
 * クエリのページング.
 */
export interface Paging {
  /** */
  page?: number;
  /** */
  size?: number;
}

export type ResourceMetaPublished = string | null;

export type ResourceMetaPath = string[] | null;

export type ResourceMetaUpdated = string | null;

export type ResourceMetaTxtHash = number | null;

/**
 * リソースメタ情報.
 */
export interface ResourceMeta {
  title: string;
  authors?: string[];
  published?: ResourceMetaPublished;
  urls?: string[];
  path?: ResourceMetaPath;
  updated?: ResourceMetaUpdated;
  txt_hash?: ResourceMetaTxtHash;
}

/**
 * リクエスト用.
 */
export type ResourceMetas = ResourceMeta[];

/**
 * 参照用の無意味な記号(参照を持たない)
 */
export type TermAlias = string | null;

/**
 * 用語.
 */
export interface Term {
  names?: string[];
  /** 参照用の無意味な記号(参照を持たない) */
  alias?: TermAlias;
}

export type UserCreateIsActive = boolean | null;

export type UserCreateIsSuperuser = boolean | null;

export type UserCreateIsVerified = boolean | null;

/**
 * 作成.
 */
export interface UserCreate {
  email: string;
  password: string;
  is_active?: UserCreateIsActive;
  is_superuser?: UserCreateIsSuperuser;
  is_verified?: UserCreateIsVerified;
}

/**
 * 読み取り.
 */
export interface UserRead {
  id: string;
  email: string;
  is_active?: boolean;
  is_superuser?: boolean;
  is_verified?: boolean;
}

export type UserUpdatePassword = string | null;

export type UserUpdateEmail = string | null;

export type UserUpdateIsActive = boolean | null;

export type UserUpdateIsSuperuser = boolean | null;

export type UserUpdateIsVerified = boolean | null;

/**
 * 更新.
 */
export interface UserUpdate {
  password?: UserUpdatePassword;
  email?: UserUpdateEmail;
  is_active?: UserUpdateIsActive;
  is_superuser?: UserUpdateIsSuperuser;
  is_verified?: UserUpdateIsVerified;
}

export type ValidationErrorLocItem = string | number;

export interface ValidationError {
  loc: ValidationErrorLocItem[];
  msg: string;
  type: string;
}

export type OauthGoogleJwtAuthorizeGoogleAuthorizeGetParams = {
  scopes?: string[];
};

export type OauthGoogleJwtCallbackGoogleCallbackGetParams = {
  code?: string | null;
  code_verifier?: string | null;
  state?: string | null;
  error?: string | null;
};

export type SearchByTextKnowdeGetParams = {
  q?: string;
  type?: SearchByTextKnowdeGetType;
  paging?: Paging;
  order?: OrderBy | null;
};

export type SearchByTextKnowdeGetType =
  (typeof SearchByTextKnowdeGetType)[keyof typeof SearchByTextKnowdeGetType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SearchByTextKnowdeGetType = {
  CONTAINS: "CONTAINS",
  STARTS_WITH: "STARTS_WITH",
  ENDS_WITH: "ENDS_WITH",
  REGEX: "REGEX",
  EQUAL: "EQUAL",
} as const;
